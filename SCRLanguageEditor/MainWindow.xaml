<Window x:Class="SCRLanguageEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SCRLanguageEditor.Viewmodel"
        xmlns:vmBase="clr-namespace:SCRCommon.Viewmodels;assembly=SCRCommon"
        xmlns:base="clr-namespace:SCRCommon.WpfStyles;assembly=SCRCommon"
        xmlns:data="clr-namespace:SCRLanguageEditor.Data"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance local:VM_Main}"
        Title="Language Editor" Height="500" Width="950"
        MinHeight="200" MinWidth="350"
        Icon="pack://application:,,,/SCRCommon;component/Icons/Dictionary_32x.png"
        Style="{DynamicResource WindowStyle}"
        x:Name="Window" >

    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl+Alt"        Key="N" Command="{Binding Cmd_NewFormat}" />
        <KeyBinding Modifiers="Ctrl+Alt"        Key="O" Command="{Binding Cmd_LoadFormat}"/>
        <KeyBinding Modifiers="Ctrl+Alt"        Key="S" Command="{Binding Cmd_SaveFormat}" />
        <KeyBinding Modifiers="Ctrl+Alt+Shift"  Key="S" Command="{Binding Cmd_SaveFormatAs}" />
        
        <KeyBinding Modifiers="Ctrl"        Key="N" Command="{Binding Cmd_NewFile}"/>
        <KeyBinding Modifiers="Ctrl"        Key="O" Command="{Binding Cmd_Open}"/>
        <KeyBinding Modifiers="Ctrl"        Key="S" Command="{Binding Cmd_Save}"/>
        <KeyBinding Modifiers="Ctrl+Shift"  Key="S" Command="{Binding Cmd_SaveAs}"/>
    </Window.InputBindings>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <base:BaseWindowStyle/>

                <ResourceDictionary>
                    <vmBase:BindingProxy x:Key="proxy" Data="{Binding}" />
                    <vmBase:WindowWidthConverter x:Key="WindowWidthConverter" Percentage="0.4"/>
                    <vmBase:BindingProxy x:Key="DescriptionWidth" Data="{Binding ElementName=Window, Path=ActualWidth, Converter={StaticResource WindowWidthConverter}}"/>
                    <vmBase:StringEmptyConverter x:Key="StringEmptyConverter"/>
                    <vmBase:VisibilityConverter x:Key="VisibilityConverter"/>

                    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent">
                                        <Path x:Name="ExpandPath"
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center" 
                                            Margin="1,1,1,1"
                                            Fill="{DynamicResource FontBrush}"
                                            Data="M 4 0 L 8 4 L 4 8 Z"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 4 L 8 4 L 4 8 Z"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <ControlTemplate x:Key="TVI_Base" TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <vmBase:LeftMarginMultiplierConverter Length="20" x:Key="LengthConverter"/>
                        </ControlTemplate.Resources>
                        <StackPanel MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                Margin="0 0 5 0">
                                <Grid Margin="{Binding Converter={StaticResource LengthConverter},
                                    RelativeSource={RelativeSource TemplatedParent}}"
                                      VerticalAlignment="Center">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20" />
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <ToggleButton x:Name="Expander"
                                        Style="{DynamicResource ExpandCollapseToggleStyle}"
                                        IsChecked="{Binding Path=IsExpanded,
                                        RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press"/>

                                    <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Margin="2 0 0 0"
                                                      HorizontalAlignment="Stretch" ContentSource="Header" Tag="Hidden"/>
                                </Grid>
                            </Border>
                            <Border x:Name="ItemsHost" Padding="0,3,0,3"
                                    BorderThickness="0, 0, 0, 3" BorderBrush="{DynamicResource BG3}">
                                <ItemsPresenter/>
                            </Border>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding IsMouseOver, ElementName=Bd}" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource HighlightedBG}"/>
                            </DataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="contentPresenter" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SelectedBG}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource DisabledBG}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=Bd}" Value="True"/>
                                    <Condition Binding="{Binding Data.Settings.DevMode, Source={StaticResource proxy}}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="contentPresenter" Property="Tag" Value="Visible"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <Style x:Key="Node" TargetType="{x:Type TreeViewItem}">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Padding" Value="1,0,0,0"/>
                        <Setter Property="Template" Value="{DynamicResource TVI_Base}"/>
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static data:Node+NodeType.ParentNode}">
                                <Setter Property="Background" Value="{DynamicResource BG1}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Type}" Value="{x:Static data:Node+NodeType.StringNode}">
                                <Setter Property="Background" Value="{DynamicResource BG2}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="DevmodeMenuItem" TargetType="{x:Type MenuItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Settings.DevMode}" Value="false">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Setter Property="Height" Value="0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="DescriptionStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                        <EventSetter Event="KeyDown" Handler="TextBox_KeyDown"/>
                        <Setter Property="IsReadOnly" Value="True"/>
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="{DynamicResource HintFontBrush}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Data.Settings.DevMode, 
                                    Source={StaticResource proxy}, 
                                    Mode=OneWay}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter Property="Foreground" Value="{DynamicResource FontBrush}"/>
                                    <Setter Property="IsReadOnly" Value="False"/>
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>


                    <!--Node Templates-->
                    <HierarchicalDataTemplate x:Key="ParentNode" ItemsSource="{Binding Children}">
                        <Grid Margin="0, 4, 0, 4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding RequiresUpdate}"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="{Binding Source={StaticResource DescriptionWidth}, Path=Data}"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0" SnapsToDevicePixels="True" Fill="#00ccf5" Margin="0,0,5,0"/>
                            <TextBox x:Name="NameBox" Grid.Column="1" Text="{Binding Name}" Style="{StaticResource DescriptionStyle}" FontSize="22" Foreground="{DynamicResource FontBrush}"/>

                            <StackPanel Grid.Column="2" Orientation="Horizontal" FlowDirection="LeftToRight" Height="{Binding ActualHeight, ElementName=NameBox}"
                                        Visibility="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" >
                                <Button Content="Add Parent" Style="{DynamicResource BlueButton}" Padding="10,0,10,0" Margin="5,0,5,0"/>
                                <Button Content="Add String" Style="{DynamicResource GreenButton}" Padding="10,0,10,0" Margin="5,0,5,0"/>                                
                            </StackPanel>
                            

                            
                            <TextBox Grid.Column="3" Text="{Binding Description}" Style="{StaticResource DescriptionStyle}"/>
                        </Grid>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate x:Key="StringNode" ItemsSource="{x:Null}">
                        <Border BorderThickness="0 1 0 1" BorderBrush="{DynamicResource BG1}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding RequiresUpdate}"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="{Binding Source={StaticResource DescriptionWidth}, Path=Data}"/>
                                </Grid.ColumnDefinitions>

                                <Rectangle Grid.Column="0" SnapsToDevicePixels="True" Fill="#00ccf5" Margin="0,0,5,0"/>
                                <TextBox Grid.Column="1" Text="{Binding Name}" Style="{StaticResource DescriptionStyle}" FontSize="22" Foreground="{DynamicResource FontBrush}"/>
                                <Rectangle Grid.Column="2" Fill="{DynamicResource BG3}"/>
                                <TextBox Grid.Column="2" Text="{Binding Value, Mode=TwoWay}" Style="{DynamicResource {x:Type TextBox}}" AcceptsReturn="True" Padding="5,10,5,10" VerticalAlignment="Stretch">
                                    <TextBox.InputBindings>
                                        <KeyBinding Modifiers="Ctrl" Key="R" Command="{Binding Cmd_Reset}"/>
                                    </TextBox.InputBindings>
                                </TextBox>
                                <TextBox Grid.Column="3" Text="{Binding Description}" Style="{StaticResource DescriptionStyle}"/>
                            </Grid>
                        </Border>
                    </HierarchicalDataTemplate>
                    <local:NodeTemplateSelector x:Key="TemplateSelector"
                                                ParentTemplate="{StaticResource ParentNode}"
                                                StringTemplate="{StaticResource StringNode}"/>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="110"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            
            <Menu Grid.Column="0">
                <MenuItem Header="File">

                    <MenuItem Header="New format" Command="{Binding Cmd_NewFormat}" InputGestureText="Ctrl+Alt+N" Style="{DynamicResource DevmodeMenuItem}">
                        <MenuItem.Icon>
                            <Image SnapsToDevicePixels="True" Source="pack://application:,,,/SCRCommon;component/Icons/NewFile.png" Height="16" Width="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Save format" Command="{Binding Cmd_SaveFormat}" InputGestureText="Ctrl+Alt+S" Style="{DynamicResource DevmodeMenuItem}">
                        <MenuItem.Icon>
                            <Image SnapsToDevicePixels="True" Source="pack://application:,,,/SCRCommon;component/Icons/Save.png" Height="16" Width="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Save format as..." Command="{Binding Cmd_SaveFormatAs}" InputGestureText="Ctrl+Alt+Shift+S" Style="{DynamicResource DevmodeMenuItem}">
                        <MenuItem.Icon>
                            <Image SnapsToDevicePixels="True" Source="pack://application:,,,/SCRCommon;component/Icons/SaveAs.png" Height="16" Width="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Height="2">
                        <Separator.Style>
                            <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Type Separator}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Settings.DevMode}" Value="false">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="Height" Value="0"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Separator.Style>
                    </Separator>
                    <MenuItem Header="Load format" Command="{Binding Cmd_LoadFormat}" InputGestureText="Ctrl+Alt+O">
                        <MenuItem.Icon>
                            <Image SnapsToDevicePixels="True" Source="pack://application:,,,/SCRCommon;component/Icons/OpenFolder.png" Height="16" Width="16"/>
                        </MenuItem.Icon>
                    </MenuItem>                    
                    <Separator/>
                    <MenuItem Header="New file" Command="{Binding Cmd_NewFile}" InputGestureText="Ctrl+N">
                        <MenuItem.Icon>
                            <Image SnapsToDevicePixels="True" Source="pack://application:,,,/SCRCommon;component/Icons/NewFile.png" Height="16" Width="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Open" Command="{Binding Cmd_Open}" InputGestureText="Ctrl+O">
                        <MenuItem.Icon>
                            <Image SnapsToDevicePixels="True" Source="pack://application:,,,/SCRCommon;component/Icons/OpenFolder.png" Height="16" Width="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Save" Command="{Binding Cmd_Save}" InputGestureText="Ctrl+S">
                        <MenuItem.Icon>
                            <Image SnapsToDevicePixels="True" Source="pack://application:,,,/SCRCommon;component/Icons/Save.png" Height="16" Width="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Save as..." Command="{Binding Cmd_SaveAs}" InputGestureText="Ctrl+Shift+S">
                        <MenuItem.Icon>
                            <Image SnapsToDevicePixels="True" Source="pack://application:,,,/SCRCommon;component/Icons/SaveAs.png" Height="16" Width="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Settings" Command="{Binding Cmd_Settings}"/>
            </Menu>
            <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" DataContext="{Binding Format}">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Rectangle}">
                        <Setter Property="Width" Value="2"/>
                        <Setter Property="Fill" Value="{DynamicResource SelectedBG}"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                    </Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="Margin" Value="10, 0, 5, 0"/>
                    </Style>
                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                        <Setter Property="Margin" Value="0, 0, 10, 0"/>
                        <Setter Property="TextAlignment" Value="Center"/>
                        <Setter Property="MinWidth" Value="20"/>
                        <Setter Property="Background" Value="{DynamicResource BG1}"/>
                    </Style>
                </StackPanel.Resources>
                
                <Rectangle/>
                <TextBlock Text="Author:"/>
                <TextBox Text="{Binding Author, Mode=TwoWay}"/>
                <Rectangle/>
                <TextBlock Text="Language:"/>
                <TextBox Text="{Binding Language, Mode=TwoWay}"/>
                <Rectangle/>
                <TextBlock Text="{Binding FileVersion}"/>
                <Rectangle/>
                <TextBlock Text="Target Name:"/>
                <TextBox Text="{Binding FormatTargetName}" IsReadOnly="True"/>
                <Rectangle/>
                <TextBlock Text="Format Version:"/>
                <TextBox Text="{Binding FormatVersion}" IsReadOnly="True"/>
            </StackPanel>
            
        </Grid>

        <TreeView Grid.Row="1"
                    ItemsSource="{Binding Format.Nodes}"
                    ItemContainerStyle="{DynamicResource Node}" 
                    ItemTemplateSelector="{StaticResource TemplateSelector}" 
                    KeyboardNavigation.TabNavigation="Contained"/>

        <Border Grid.Row="2" Padding="3">
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="{DynamicResource BG2}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Message, Converter={StaticResource StringEmptyConverter}}" Value="False">
                            <Setter Property="Background" Value="#DD2E44"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <TextBlock Text="{Binding Message}"/>
        </Border>
    </Grid>
</Window>
