<UserControl
    x:Class="SCRDialogEditor.XAML.UcGridNode"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:SCRDialogEditor.XAML"
    xmlns:vm="clr-namespace:SCRDialogEditor.Viewmodel"
    mc:Ignorable="d" 
    d:DataContext="{d:DesignInstance Type=vm:VmNode}"
    d:Height="100"
    d:Width="200"
    Loaded="OnLoaded"
    Unloaded="OnUnloaded"
    MouseUp="OnMouseUp"
    x:Name="Wrapper">

    <UserControl.Resources>
        <Style TargetType="{x:Type Border}" x:Key="Socket">
            <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource OutlineHg}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>


    <UserControl.Template>
        <ControlTemplate TargetType="{x:Type local:UcGridNode}">
            <Border 
                x:Name="Outline"
                CornerRadius="11" 
                BorderThickness="3" 
                BorderBrush="{DynamicResource Outline}" 
                Background="{DynamicResource BG1}">

                <Grid MinWidth="120" MaxWidth="180" ClipToBounds="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="Auto" MinHeight="120"/>
                    </Grid.RowDefinitions>

                    <Grid x:Name="GrabGrid" 
                        Cursor="Hand"
                        MouseDown="Grab_MouseDown"
                        MouseUp="Grab_MouseUp">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border 
                            CornerRadius="8 0 0 0" 
                            Background="{Binding ExpressionColor}"
                            SnapsToDevicePixels="True"/>
                        <Border 
                            Grid.Column="1" 
                            CornerRadius="0 8 0 0" 
                            Background="{Binding CharacterColor}"
                            SnapsToDevicePixels="True"/>
                    </Grid>

                    
                    <Border
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Width="10"
                        Height="20"
                        BorderThickness="3 3 0 3"
                        Background="{DynamicResource BG1}"
                        Style="{StaticResource Socket}">
                        <Border.RenderTransform>
                            <TranslateTransform X="-13" Y="30"/>
                        </Border.RenderTransform>
                        <Path Grid.Row="1" Data="m -3 5 v 4 h -10 v -4 h -4 v 4 h -8 v -4 h -6 v 4 h -4 v -4 z" Fill="{DynamicResource FontBrush}">
                            <Path.Style>
                                <Style TargetType="{x:Type Path}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasBackwardsInput}" Value="false">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Border>

                    <ListBox 
                        Grid.Row="1"
                        ItemsSource="{Binding Outputs}" 
                        BorderThickness="0" 
                        Background="Transparent"
                        HorizontalContentAlignment="Stretch">

                        <ListBox.Template>
                            <ControlTemplate>
                                <ItemsPresenter/>
                            </ControlTemplate>
                        </ListBox.Template>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <ContentPresenter 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>

                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:VmNodeOutput}">
                                <Grid Height="30" ClipToBounds="False">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <!--Dialog Choice Icon-->
                                    <Image Source="{Binding NodeIconPath, TargetNullValue={x:Null}}" 
                                           Width="24" 
                                           Height="24"  
                                           IsHitTestVisible="False">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding NodeIcon}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>

                                    <!--Text Preview-->
                                    <TextBlock Text="{Binding Text}"
                                        Grid.Column="1"
                                        TextTrimming="WordEllipsis"
                                        TextWrapping="NoWrap"
                                        VerticalAlignment="Center"
                                        Padding="5 5 10 5"
                                        Foreground="{DynamicResource FontBrush}"
                                        FontSize="{Binding FontSize, ElementName=Wrapper}"/>

                                    <!--Connection Socket-->
                                    <Border
                                        Grid.Column="1"
                                        Style="{StaticResource Socket}"
                                        BorderThickness="3"
                                        Background="{Binding CharacterColor}" 
                                        Width="18"
                                        Height="18"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                            
                                        Loaded="Socket_Loaded"
                                        Unloaded="Socket_Unloaded"
                                        MouseLeave="Socket_MouseLeave"
                                        MouseUp="Socket_MouseUp"
                                        MouseDown="Socket_MouseDown">
                                        <Border.RenderTransform>
                                            <TranslateTransform X="9"/>
                                        </Border.RenderTransform>

                                        <Polygon Points="0,0 0,11 11,0" Fill="{Binding ExpressionColor}"/>
                                    </Border>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>

                    </ListBox>

                </Grid>
            </Border>
            
            <ControlTemplate.Triggers>
                <Trigger SourceName="GrabGrid" Property="IsMouseOver" Value="True">
                    <Setter TargetName="Outline" Property="BorderBrush" Value="{DynamicResource OutlineHg}"/>
                </Trigger>

                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter TargetName="Outline" Property="BorderBrush" Value="{DynamicResource FontBrush}"/>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsActive}" Value="True"/>
                        <Condition Binding="{Binding IsSelected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="Outline" Property="BorderBrush" Value="{DynamicResource Green}"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Template>
</UserControl>
