<UserControl x:Class="SCR.Tools.DialogEditor.WPF.UserControls.GridView.UcNode"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SCR.Tools.DialogEditor.WPF.UserControls.GridView"
             xmlns:wpf="clr-namespace:SCR.Tools.DialogEditor.WPF"
             xmlns:converters="clr-namespace:SCR.Tools.WPF.Converters;assembly=SCR.Tools.WPF"
             xmlns:vm="clr-namespace:SCR.Tools.DialogEditor.Viewmodeling"
             mc:Ignorable="d" 
             d:DesignHeight="151" d:DesignWidth="140"
             d:DataContext="{x:Static wpf:DesignDataFactory.Node}"
             x:Name="NodeContainer">

    <UserControl.Style>
        <Style TargetType="{x:Type local:UcNode}">
            <Setter Property="LocationX" Value="{Binding LocationX, Mode=TwoWay}"/>
            <Setter Property="LocationY" Value="{Binding LocationY, Mode=TwoWay}"/>
        </Style>
    </UserControl.Style>
    
    <UserControl.Resources>
        <converters:ColorToBrushConverter x:Key="ColorToBrush"/>
    </UserControl.Resources>

    <UserControl.Template>
        <ControlTemplate TargetType="{x:Type UserControl}">
            <Border 
                x:Name="Outline"
                CornerRadius="11" 
                Padding="3"
                Background="{DynamicResource Outline}"
                Width="140" MaxWidth="140">

                <Grid ClipToBounds="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="120" MinHeight="120"/>
                    </Grid.RowDefinitions>

                    <Grid 
                        x:Name="GrabGrid" 
                        Cursor="Hand"
                        MouseDown="GrabGrid_MouseDown"
                        MouseUp="GrabGrid_MouseUp"
                        MouseLeave="GrabGrid_MouseLeave">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border 
                            CornerRadius="8 0 0 0" 
                            Background="{Binding Outputs[0].ExpressionColor, Converter={StaticResource ColorToBrush}}"/>

                        <Border 
                            Grid.Column="1" 
                            CornerRadius="0 8 0 0" 
                            Background="{Binding Outputs[0].CharacterColor, Converter={StaticResource ColorToBrush}}"/>

                    </Grid>

                    <Border 
                        Grid.Row="1" 
                        Background="{DynamicResource BG1}"
                        CornerRadius="0 0 8 8">
                        
                        <ContentPresenter/>
                        
                    </Border>
                    
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger SourceName="GrabGrid" Property="IsMouseOver" Value="True">
                    <Setter TargetName="Outline" Property="Background" Value="{DynamicResource OutlineHG}"/>
                </Trigger>

                <DataTrigger Binding="{Binding Selected}" Value="True">
                    <Setter TargetName="Outline" Property="Background" Value="{DynamicResource FontBrush}"/>
                </DataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Active}" Value="True"/>
                        <Condition Binding="{Binding Selected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="Outline" Property="Background" Value="{DynamicResource Green}"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Template>

    <Grid>
        <Border
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Width="10"
            Height="20"
            BorderThickness="3 3 0 3"
            Background="{DynamicResource BG1}">

            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="BorderBrush" Value="{DynamicResource Outline}"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource OutlineHG}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            
            <Border.RenderTransform>
                <TranslateTransform X="-13"/>
            </Border.RenderTransform>
        </Border>

        <ListBox 
            x:Name="OutputSockets"
            Grid.Row="1"
            ItemsSource="{Binding Outputs}" 
            BorderThickness="0" 
            Background="Transparent"
            HorizontalContentAlignment="Stretch">

            <ListBox.Template>
                <ControlTemplate>
                    <ItemsPresenter/>
                </ControlTemplate>
            </ListBox.Template>

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>

            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:VmNodeOutput}">
                    <local:UcNodeOutputSocket
                        DataContext="{Binding }"/>
                </DataTemplate>
            </ListBox.ItemTemplate>

        </ListBox>
    </Grid>
</UserControl>
