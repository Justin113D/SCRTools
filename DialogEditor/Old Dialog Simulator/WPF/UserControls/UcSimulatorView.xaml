<UserControl 
    x:Class="SCR.Tools.Dialog.Simulator.WPF.UserControls.UcSimulatorView"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:SCR.Tools.Dialog.Simulator.WPF.UserControls"
    xmlns:vm="clr-namespace:SCR.Tools.Dialog.Simulator.Viewmodeling"
    xmlns:wpf="clr-namespace:SCR.Tools.Dialog.Simulator.WPF"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800"
    d:DataContext="{x:Static wpf:DesignDataFactory.Simulator}">

    <UserControl.Resources>
        <wpf:OutputNumConverter x:Key="OutputNumToColor"/>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid Margin="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid HorizontalAlignment="Left" Margin="0 0 40 0">
                
                <TextBlock 
                    Text="{Binding LeftPortrait.Name}"
                    TextAlignment="Center"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LeftPortrait.PortraitPath}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            
                <Image 
                    Stretch="Uniform"
                    Source="{Binding LeftPortrait.PortraitPath, TargetNullValue={x:Null}}"/>
                
            </Grid>

            <Grid Grid.Column="1" HorizontalAlignment="Right" Margin="40 0 0 0">
                
                <TextBlock 
                    Text="{Binding RightPortrait.Name}"
                    TextAlignment="Center"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RightPortrait.PortraitPath}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Image 
                    Stretch="Uniform"
                    Source="{Binding RightPortrait.PortraitPath, TargetNullValue={x:Null}}"
                    RenderTransformOrigin="0.5,0.5">
                    <Image.RenderTransform>
                        <ScaleTransform ScaleX="-1"/>
                    </Image.RenderTransform>
                </Image>
                
            </Grid>
            

        </Grid>

        <Grid 
            Margin="0 5"
            Grid.Row="1" 
            DataContext="{Binding ActiveNode}">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <ListBox
                Grid.Column="0"
                ItemsSource="{Binding ValidOutputs}"
                SelectedValue="{Binding ActiveOutput, Mode=TwoWay}"
                BorderThickness="0" 
                Background="Transparent">
                
                <ListBox.Style>
                    <Style TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DisplayOutputs}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.Style>

                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:VmNodeOutput}">

                        <Image
                            Margin="5"
                            Stretch="Uniform"
                            Source="{Binding IconPath, TargetNullValue={x:Null}}"/>
                            
                    </DataTemplate>
                </ListBox.ItemTemplate>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="5 2"/>
                        <Setter Property="MinHeight" Value="40"/>
                        <Setter Property="MinWidth" Value="40"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="BorderThickness" Value="0"/>

                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border
                                        x:Name="bg"
                                        BorderThickness="3"
                                        BorderBrush="{Binding Connected.OutputNumber, Converter={StaticResource OutputNumToColor}}"
                                        Background="{DynamicResource BG1}">
                                        <ContentPresenter/>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="bg" Property="Background" Value="{DynamicResource HighlightedBG}"/>
                                            <Setter TargetName="bg" Property="BorderThickness" Value="5"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="bg" Property="Background" Value="{DynamicResource SelectedBG}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <StackPanel>
                            <ItemsPresenter />
                        </StackPanel>
                    </ControlTemplate>
                </ListBox.Template>
            </ListBox>

            <Border
                Grid.Column="1"
                Background="{DynamicResource BG1}"
                MinHeight="176">
                
                <TextBlock 
                    Margin="15"
                    FontSize="15"
                    Text="{Binding ActiveOutput.Text}"/>
                
            </Border>
            
        </Grid>

        <Grid Grid.Row="2">

            <Grid.Resources>
                <Style x:Key="IconButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TransparentButton}">
                    <Setter Property="Margin" Value="0 0 5 0"/>
                    <Setter Property="Padding" Value="8 0"/>
                </Style>
            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button 
                Grid.Column="0"
                Style="{StaticResource IconButton}"
                ToolTip="Undo (Ctrl+Z)" 
                Click="Button_Undo">
                <Image Source="pack://application:,,,/SCR.Tools.WPF;component/Icons/Undo.png" Width="16"/>
            </Button>

            <Button 
                Grid.Column="1"
                Style="{StaticResource IconButton}"
                ToolTip="Redo (Ctrl+Y)" 
                Click="Button_Redo">
                <Image Source="pack://application:,,,/SCR.Tools.WPF;component/Icons/Redo.png" Width="16"/>
            </Button>

            <Button 
                Grid.Column="2"
                Style="{StaticResource IconButton}"
                ToolTip="Reset (Ctrl+R)" 
                Command="{Binding CmdReset}">
                <Image Source="pack://application:,,,/SCR.Tools.WPF;component/Icons/Refresh.png" Width="16"/>
            </Button>

            <Button
                HorizontalAlignment="Right"
                Grid.Column="3"
                Padding="30 5"
                Content="Next"
                FontWeight="Bold"
                Command="{Binding CmdNext}"
                IsEnabled="{Binding HasNextNode}"
                Style="{DynamicResource GreenButton}"/>
        </Grid>
    </Grid>
</UserControl>
